// @flow
import { Model } from 'mongoose';
import { Router, Request, Response, NextFunction } from 'express';

export type ReqUser = { _id: string, role?: string };

export type CrudOptions = {
  id?: string,
  data?: any,
  user?: ReqUser
};

export type CrudOperation = CrudOptions => Promise<any>;

export type CrudOperations = {
  getAll: CrudOptions => Promise<any[]>,
  getById: CrudOptions => Promise<any>,
  create: CrudOptions => Promise<any>,
  update: CrudOptions => Promise<any>,
  delete: CrudOptions => Promise<any>
};

export type Middleware = (
  req: Request,
  res: Response,
  next?: NextFunction
) => any;

export type RouteHooks = {
  getAll: Middleware,
  getById: Middleware,
  create: Middleware,
  update: Middleware,
  delete: Middleware
};

export type MongooseCrudGenerator = ({
  operations: CrudOperations,
  responseFormatter?: Middleware,
  before: CrudOperations,
  after: RouteHooks
}) => CrudOperations;

export type CrudGenOptions = {
  model: Model,
  responseFormatter?: Middleware,
  before: CrudOperations,
  after: RouteHooks,
  path: string
};
